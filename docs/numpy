#导入块
import numpy as np
#定义数组
array=np.array([[1,2,3],
                          [2,3,4]])
print(array)
#几维数组
print('number of dim:',array.ndim)
#几行几列
print('shape:',array.shape)
#矩阵有多少个元素
print('size:',array.size)

#dtype=np.int默认64可以32，np.float
a=np.array([2,3,4],dtype=np.int)
print(a.dtype)

#全部为0的矩阵,三行四列
a=np.zeros((3,4))
a=np.ones((3,4),dtype=np.int)
#输出一个接近于0的矩阵
a=np.empty((3,4))

#默认起始为0，从几到几步长
a=np.arange(10,20,2)
a=np.arange(12).reshape((3,4))

#从1到10分20个数字
a=np.linspace(1,10,20).reshape((4,5))

#矩阵运算，对应加减乘
import  numpy as np
a=np.array([10,20,30,40])
b=np.arange(4)
c=a-b
c=a+b
c=b**2
c=10*np.sin(a)

#矩阵b<3就为True，否则为False
print(b<3)

#矩阵跟矩阵运算
a=np.array([[1,1]
                    [0,1]])
b=np.arange(4).rashape((2,2))
#逐个相乘
c=a*b

#矩阵乘法
c_dot=np.dot(a,b)
c_dot=a.dot(b)

#随机生成两行四列,求和最小，最大，axis=1行求，axis=0列求
a=np.random.random((2,4))
b=np.sum(a，axis=1)
c=np.min(a)
d=np.max(a)

A=np.arange(2,14).reshape((3,4))
#搜索最小索引 最大索引
np.argmin(A)
np.argmax(A)

#平均值
np.mean(A)=A.mean()
np.average(A)

#中位数
np.median(A)

#累加过程
np.cumsum()

#求相邻的差
np.diff()

#找出输出值的行数，输出值的列数
np.nonzero(A)

#逐行排序
np.sort()

#求转置
np.transpose()
A.T  求A的转置

#矩阵A中小于5的变成5，大于9的变成9
np.clip(A,5,9)

#输出列平均值
np.mean(A,axis=0)

#索引
A=np.arange(3,15)
print(A[3])
#索引第二行第二列
A.arange(3,15).reshape((3,4))
A[1][1]或者A[1,1]
#输出第3行所有数，第一列所有数
A[2,:]
A[:,0]
#输出第二行，第二三列的数字
A[1,1:3]

#输出所有行
for row in A:
	print(row)
#输出每一列
for column in A.T:
	print(column)
#迭代A的项目 A.flatten()变成一行，A.flat一个一个输出
for item in A.flat:
	print(item)

#上下合并
A=np.array([1,1,1])
B=np.array([2,2,2])
np.vstack((A,B))

#左右合并
np.hstack((A,B))

#加一个维度，newaxis在左就是行加维度，右列加维度
A[np.newaxis,:]
A[:,np.newaxis]

#多个序列合并，可以指定哪个维度合并
np.concatenate((A,B,B,A),axis=0)


A=np.arange(12).reshape((3,4))
#等量分割axis=1竖着分割，=0横向分割
np.split(A,2,axis=1)

#不等量分割
np.array_split(A,3,axis=1)

#上下分割
np.vsplit(A,3)
#左右分割
np.hsplit(A,3)

#赋值
a=np.arange(4)
b=a
c=a
d=b
abcd一样，改变一个 别的也变
#不关联的拷贝
b=a.copy()
